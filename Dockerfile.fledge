# Fledge Core - Multistage Build from Source
FROM ubuntu:22.04 AS base
ENV DEBIAN_FRONTEND=noninteractive TZ=UTC
WORKDIR /workspace

# Build dependencies
RUN apt-get update && apt-get install -y \
    build-essential cmake git \
    python3 python3-pip python3-dev python3-setuptools python3-wheel \
    libssl-dev libpq-dev libsqlite3-dev libcurl4-openssl-dev \
    pkg-config curl wget sudo \
    krb5-user libkrb5-dev \
    libblas-dev liblapack-dev gfortran \
    libboost-all-dev uuid-dev zlib1g-dev libjpeg-dev \
    avahi-daemon libavahi-client-dev libavahi-common-dev \
    rsyslog \
 && rm -rf /var/lib/apt/lists/*

# Build Fledge (v3.1.0)
FROM base AS development
RUN git clone https://github.com/fledge-iot/fledge.git
WORKDIR /workspace/fledge
RUN git checkout v3.1.0
RUN apt-get update \
 && chmod +x requirements.sh && ./requirements.sh \
 && make -j"$(nproc)" \
 && make install DESTDIR=/opt/fledge-build

# Slim runtime
FROM ubuntu:22.04 AS production
ENV DEBIAN_FRONTEND=noninteractive TZ=UTC

# Runtime libs + curl binary
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 python3-venv python3-pip \
    libpython3.10 libpython3.10-stdlib \
    libpq5 libsqlite3-0 \
    libcurl4 ca-certificates openssl procps \
    curl \
    libboost-system1.74.0 libboost-thread1.74.0 libboost-filesystem1.74.0 \
    libboost-program-options1.74.0 libboost-regex1.74.0 \
    libboost-chrono1.74.0 libboost-date-time1.74.0 \
 && rm -rf /var/lib/apt/lists/*

# Install Fledge
COPY --from=development /opt/fledge-build/usr/local/fledge /usr/local/fledge

# Python deps
RUN apt-get update && apt-get install -y --no-install-recommends build-essential python3-dev && \
    python3 -m pip install --no-cache-dir -r /usr/local/fledge/python/requirements.txt && \
    apt-get purge -y --auto-remove build-essential python3-dev && \
    rm -rf /var/lib/apt/lists/*

# Environment
ENV FLEDGE_ROOT=/usr/local/fledge \
    FLEDGE_DATA=/usr/local/fledge/data \
    PATH="/usr/local/fledge/bin:${PATH}" \
    LD_LIBRARY_PATH="/usr/local/fledge/lib:${LD_LIBRARY_PATH}"

# Non-root + dirs
RUN useradd -r -s /bin/false fledge \
 && mkdir -p "${FLEDGE_DATA}" /var/log/fledge \
 && touch /var/log/fledge/fledge.log \
 && chown -R fledge:fledge /usr/local/fledge /var/log/fledge

# Self-signed certs
RUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout "${FLEDGE_DATA}/fledge.key" \
    -out "${FLEDGE_DATA}/fledge.cert" \
    -subj "/C=US/ST=CA/L=San Francisco/O=Fledge/CN=localhost" \
 && chown fledge:fledge "${FLEDGE_DATA}/fledge.key" "${FLEDGE_DATA}/fledge.cert"

EXPOSE 8081 1995
USER fledge

HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -fsS http://localhost:8081/fledge/ping || exit 1

# Start Fledge and stream the correct log
CMD bash -lc '$FLEDGE_ROOT/bin/fledge start || true; tail -F /var/log/fledge/fledge.log'
